# Include shared CI
include:
  - project: "epi2melabs/ci-templates"
    file: "wf-containers.yaml"

variables:
  NF_WORKFLOW_OPTS: >
    -executor.\$$local.memory 16GB
    --fastq test_data/fastq
    --reference test_data/reference.fasta
    --threads 2
    --combine_results
  AFTER_NEXTFLOW_CMD: |
    ! grep 'No reads left after pre-processing' .nextflow.log &&
    ! grep 'only a limited report is available' $$PWD/$$CI_PROJECT_NAME/*html
  CI_FLAVOUR: "new"

docker-run:
  tags: []

  # Define a 1D job matrix to inject a variable named MATRIX_NAME into
  #   the CI environment, we can use the value of MATRIX_NAME to determine
  #   which options to apply as part of the rules block below
  # NOTE There is a slightly cleaner way to define this matrix to include
  #   the variables, but it is broken when using long strings! See CW-756
  parallel:
    matrix:
      - MATRIX_NAME:
          [
            "ref",
            "ref-sample_sheet",
            "ref-with-spaces",
            "filter-all",
            "de-novo",
            "de-novo-spoa-max-len-2000",  # CW-3864
            "ref-no-reads",
            "ref-single-read",
            "de-novo-no-reads",
            "de-novo-single-read",
            "ref-mergeVCFs-single-barcode",  # CW-3611
          ]
  rules:
    # NOTE As we're overriding the rules block for the included docker-run
    #   we must redefine this CI_COMMIT_BRANCH rule to prevent docker-run
    #   being incorrectly scheduled for "detached merge request pipelines" etc.
    - if: ($CI_COMMIT_BRANCH == null || $CI_COMMIT_BRANCH == "dev-template")
      when: never
    - if: $MATRIX_NAME == "ref"
      variables:
        # use default workflow opts defined above
        NF_PROCESS_FILES: >
          main.nf
          modules/local/variant-calling.nf
        NF_IGNORE_PROCESSES: downsampleReads,subsetReads,subsetRefFile,concatTSVs
    - if: $MATRIX_NAME == "ref-sample_sheet"
      variables:
        NF_WORKFLOW_OPTS: >
          -executor.\$$local.memory 16GB
          --fastq test_data/fastq
          --reference test_data/reference.fasta
          --sample_sheet test_data/sample_sheet.csv
          --threads 2
          --combine_results
        NF_PROCESS_FILES: >
          main.nf
          modules/local/variant-calling.nf
        NF_IGNORE_PROCESSES: downsampleReads,concatTSVs
    - if: $MATRIX_NAME == "ref-with-spaces"
      variables:
        NF_WORKFLOW_OPTS: >
          -executor.\$$local.memory 16GB
          --fastq test_data/fastq
          --reference 'test_data/ref with (parens) and spaces.fa'
          --threads 2
          --combine_results
        NF_PROCESS_FILES: >
          main.nf
          modules/local/variant-calling.nf
        NF_IGNORE_PROCESSES: downsampleReads,subsetReads,subsetRefFile,concatTSVs
    - if: $MATRIX_NAME == "filter-all"
      variables:
        NF_WORKFLOW_OPTS: >
          -executor.\$$local.memory 16GB
          --fastq test_data/fastq
          --reference test_data/reference.fasta
          --min_read_qual 20
          --combine_results
        NF_PROCESS_FILES: >
          main.nf
          modules/local/variant-calling.nf
        NF_IGNORE_PROCESSES: downsampleBAMforMedaka,downsampleReads,subsetReads,alignReads,bamstats,concatMosdepthResultFiles,medakaConsensus,medakaVariant,mergeBAMs,mergeVCFs,mosdepth,subsetRefFile,concatTSVs
        AFTER_NEXTFLOW_CMD: |
          grep 'No reads left after pre-processing' .nextflow.log &&
          grep 'only a limited report is available' $$PWD/$$CI_PROJECT_NAME/*html

    - if: $MATRIX_NAME == "de-novo"
      variables:
        NF_WORKFLOW_OPTS: >
          -executor.\$$local.memory 16GB
          --fastq test_data/fastq-denovo
        NF_PROCESS_FILES: >
          main.nf
          modules/local/de-novo.nf
        NF_IGNORE_PROCESSES: downsampleBAMforMedaka,downsampleReads,racon
        # make sure we got outputs for both barcodes
        AFTER_NEXTFLOW_CMD: |
          ls -p $$CI_PROJECT_NAME | grep -q barcode01/ &&
          ls -p $$CI_PROJECT_NAME | grep -q barcode02/

    - if: $MATRIX_NAME == "de-novo-spoa-max-len-2000"
      variables:
        # we run with a higher `--force_spoa_length_threshold` so that the SPOA
        # process is attempted on both barcodes, but due to
        # `--spoa_max_allowed_read_length 2000` SPOA actually won't be run on
        # barcode02 and there won't be a consensus for it
        NF_WORKFLOW_OPTS: >
          -executor.\$$local.memory 16GB
          --fastq test_data/fastq-denovo
          --force_spoa_length_threshold 6000
          --spoa_max_allowed_read_length 2000
        NF_PROCESS_FILES: >
          main.nf
          modules/local/de-novo.nf
        NF_IGNORE_PROCESSES: downsampleBAMforMedaka,downsampleReads,racon
        # make sure we only got outputs for barcode01
        AFTER_NEXTFLOW_CMD: |
          ls -p $$CI_PROJECT_NAME | grep -q barcode01/ &&
          ls -p $$CI_PROJECT_NAME | grep -vq barcode02/

    - if: $MATRIX_NAME == "ref-no-reads"
      variables:
        NF_WORKFLOW_OPTS: >
          -executor.\$$local.memory 16GB
          --fastq test_data/fastq-no-reads
          --reference test_data/reference.fasta
          --threads 2
          --combine_results
        NF_PROCESS_FILES: >
          main.nf
          modules/local/variant-calling.nf
        NF_IGNORE_PROCESSES: downsampleBAMforMedaka,downsampleReads,subsetReads,medakaConsensus,medakaVariant,mergeBAMs,mergeVCFs,subsetRefFile,concatTSVs
        AFTER_NEXTFLOW_CMD: |
          grep 'No reads left after pre-processing' .nextflow.log &&
          grep 'only a limited report is available' $$PWD/$$CI_PROJECT_NAME/*html
    - if: $MATRIX_NAME == "ref-single-read"
      variables:
        NF_WORKFLOW_OPTS: >
          -executor.\$$local.memory 16GB
          --fastq test_data/fastq-single-read
          --reference test_data/reference.fasta
          --threads 2
          --combine_results
        NF_PROCESS_FILES: >
          main.nf
          modules/local/variant-calling.nf
        NF_IGNORE_PROCESSES: downsampleBAMforMedaka,downsampleReads,subsetReads,medakaConsensus,medakaVariant,mergeBAMs,mergeVCFs,subsetRefFile,concatTSVs
        AFTER_NEXTFLOW_CMD: grep 'only a limited report is available' $$PWD/$$CI_PROJECT_NAME/*html

    - if: $MATRIX_NAME == "de-novo-no-reads"
      variables:
        NF_WORKFLOW_OPTS: >
          -executor.\$$local.memory 16GB
          --fastq test_data/fastq-no-reads
          --threads 2
          --combine_results
        NF_PROCESS_FILES: >
          main.nf
          modules/local/de-novo.nf
        NF_IGNORE_PROCESSES: downsampleReads,subsetReads,subsetRefFile,concatTSVs,medakaConsensus,miniasm,mosdepthPerBase,mosdepthWindows,racon,spoa,trimAndQC
        AFTER_NEXTFLOW_CMD: |
          grep 'No reads left after pre-processing' .nextflow.log &&
          grep 'only a limited report is available' $$PWD/$$CI_PROJECT_NAME/*html
    - if: $MATRIX_NAME == "de-novo-single-read"
      variables:
        NF_WORKFLOW_OPTS: >
          -executor.\$$local.memory 16GB
          --fastq test_data/fastq-single-read
          --threads 2
          --combine_results
        NF_PROCESS_FILES: >
          main.nf
          modules/local/de-novo.nf
        NF_IGNORE_PROCESSES: downsampleReads,subsetReads,subsetRefFile,concatTSVs,medakaConsensus,miniasm,mosdepthPerBase,mosdepthWindows,racon,spoa,trimAndQC
        AFTER_NEXTFLOW_CMD: "grep 'only a limited report is available' $$PWD/$$CI_PROJECT_NAME/*html"

    - if: $MATRIX_NAME == "ref-mergeVCFs-single-barcode"
      variables:
        NF_WORKFLOW_OPTS: >
          -executor.\$$local.memory 16GB
          --fastq test_data/fastq/barcode01
          --reference test_data/reference.fasta
          --threads 2
          --combine_results
        NF_PROCESS_FILES: >
          main.nf
          modules/local/variant-calling.nf
        NF_IGNORE_PROCESSES: downsampleReads,subsetReads,subsetRefFile,concatTSVs
